<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
>
<h:head>


</h:head>
<h:body>
    <c:set var="numerosList" value="#{[1,2,3,4,5,6,7,8,9,10,11]}" />
<p:importEnum type="br.com.devdojo.maratonajsf.model.enums.Turno" var="Turno" allSuffix="ALL_ENUM_VALUES" />



<!--<h:outputLabel value="Mi maki and Gabrielito Lindo"/><br />
      <h:outputLabel value="#{estudianteRegistrarBean.estudiante.nombre}" /> <br />
      <h:outputLabel value="#{estudianteRegistrarBean.estudiante['apellido']}" /> <br />

      <h:outputText value="ENUM" /> <br />
      <h:outputLabel value="#{estudianteRegistrarBean.estudiante.turno eq Turno.MATUTINO}" />

&lt;!&ndash; Arrays &ndash;&gt;
<h:outputLabel value="#{estudianteRegistrarBean.nombresArray[0]}
#{estudianteRegistrarBean.nombresArray[1]}
#{estudianteRegistrarBean.nombresArray[2]}
"/> <br />
&lt;!&ndash;ui:repeat Arrays &ndash;&gt;
<ui:repeat value="#{estudianteRegistrarBean.nombresArray}" var="nome">
    <h:outputLabel value="#{nome}"/><br />
</ui:repeat>

&lt;!&ndash; List &ndash;&gt;
<h:outputLabel value="#{estudianteRegistrarBean.nombresList.get(0)}
#{estudianteRegistrarBean.nombresList.get(1)}
#{estudianteRegistrarBean.nombresList.get(2)}
#{estudianteRegistrarBean.nombresList.get(3)}
"/> <br />
&lt;!&ndash;ui:repeat List &ndash;&gt;
<ui:repeat value="#{estudianteRegistrarBean.nombresList}" var="nome">
    <h:outputLabel value="#{nome}"/><br />
</ui:repeat>
&lt;!&ndash;ui:repeat SET &ndash;&gt;
<ui:repeat value="#{estudianteRegistrarBean.nombresSet.toArray()}" var="nome">
    <h:outputLabel value="#{nome}"/><br />
</ui:repeat>

&lt;!&ndash;ui:repeat MAP &ndash;&gt;
<h:outputLabel value="-&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;MAP&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;" />
<br />
<h:outputLabel value="#{estudianteRegistrarBean.nomesMap.get('Goku')}" /> <br/>
&lt;!&ndash;ui:repeat MAP &ndash;&gt;
<ui:repeat value="#{estudianteRegistrarBean.nomesMap.entrySet().toArray()}" var="entry">
    <h:outputLabel value="#{entry.key}&#45;&#45; #{entry.value}"/><br />
</ui:repeat>

&lt;!&ndash;Ejecutando metodos con BEan&ndash;&gt;
#{estudianteRegistrarBean.executar()}
#{estudianteRegistrarBean.executar('xuxu Beleza')}
#{estudianteRegistrarBean.executar(estudianteRegistrarBean.estudiante.nombre)}
#{estudianteRegistrarBean.executarRetorno(estudianteRegistrarBean.estudiante.nombre)}
<h:form>
<h:commandButton value="Ir para proxima pagina" actionListener="#{estudianteRegistrarBean.IrParaIndex2()}" /> <br />

&lt;!&ndash;Pasando valores EL para funciones JS&ndash;&gt;
    <h:commandButton value="Soltar magia" onclick="fazMagica('Hadouken') "   />
    <h:commandButton value="Alerta Nombre" onclick="alertaNombre('#{estudianteRegistrarBean.estudiante.nombre}') "   />
</h:form>
&lt;!&ndash;Imprimiento CSS con EL&ndash;&gt;

<ui:repeat value="#{estudianteRegistrarBean.nombresList}" var="nome" varStatus="status">
    <h:outputLabel value="#{nome}" style="color: #{status.index mod 2== 0 ? 'red' : 'aquamarine' }" /><br />
</ui:repeat>
<h:form id="form">
    <br />
    <h:commandButton value="Mostrar Notas" >
            <f:ajax render="notasGrid" listener="#{estudianteRegistrarBean.exhibirNotas()}"  />
    </h:commandButton>
    <br />
    <h:commandButton value="Esconder Notas" >
        <f:ajax render="notasGrid" listener="#{estudianteRegistrarBean.esconderNotas()}"  />
    </h:commandButton>


    <h:outputText value="#{estudianteRegistrarBean.estudiante.nombre}" />
    <h:outputText value="#{estudianteRegistrarBean.estudiante.apellido}" />
    <h:outputText value="#{estudianteRegistrarBean.estudiante.turno}" />
    <h:panelGrid id="notasGrid">
    <h:outputText value="#{estudianteRegistrarBean.estudiante.nota1}" rendered="#{estudianteRegistrarBean.mostrarNotas}"  />
    <h:outputText value="#{estudianteRegistrarBean.estudiante.nota2}" rendered="#{estudianteRegistrarBean.mostrarNotas}"  />
    <h:outputText value="#{estudianteRegistrarBean.estudiante.nota3}" rendered="#{estudianteRegistrarBean.mostrarNotas}"  />
    </h:panelGrid><br />

    <h:commandButton value="Mostrar Link" >
        <f:ajax render="pgLink" listener="#{estudianteRegistrarBean.exhibirLink()}"  />
    </h:commandButton>
    <br />
    <h:commandButton value="Esconder Link" >
        <f:ajax render="pgLink" listener="#{estudianteRegistrarBean.esconderLink()}"  />
    </h:commandButton>
<h:panelGroup id="pgLink">
<ui:fragment id="fragmentLink" rendered="#{estudianteRegistrarBean.mostrarLink}">
    <a href="http://www.google.es" target="_blank">www.google.es</a>
</ui:fragment>
</h:panelGroup>

</h:form>-->
<!-- -->
    <!--Lambdas -->
    #{(soma->soma +num)(10)} <br />
    #{((v1,v2,v3)->v1*v2*v3)(5,5,5)} <br/>
    #{(x->x*x*x)(3)}<br/>
    #{cubo=(x->x*x*x); cubo(20)}<br/>

    <h:form>
        <h:commandButton value="Calcular Cubo" actionListener="#{estudianteRegistrarBean.calcularCubo((x->x*x*x),10)}" />

    </h:form>
    <!-- Lists -->
    <ui:repeat value="#{['DevDojo','e','foda']}" var="fodeza">
        #{fodeza}
    </ui:repeat>
<br />

    <!-- Set -->
    <ui:repeat value="#{{'DevDojo','e','foda','foda'}}" var="fodeza">
        #{fodeza}
    </ui:repeat>

    <br />

    <!-- Map -->
    <ui:repeat value="#{{'Melhor Lugar':'DevDojo','Meljor curso':'Maratonas'}}" var="fodezaMap">
        <ui:repeat value="#{fodezaMap.entrySet().toArray()}" var="entry">
            #{entry.key} - #{entry.value}
        </ui:repeat>
    </ui:repeat>
    
    <br />
    <ui:repeat value="#{numerosList.stream().filter(v->v>5).toList()}" var="result">
        #{result}
    </ui:repeat>
    <br />
    #{numerosList.stream().average().get()}<br />
    #{numerosList.stream().sum()}<br />

    #{numerosList.stream().filter(v->v>5).sum()}
</h:body>

<script type="text/javascript">

function fazMagica(magica){
    alert(magica);
}

function alertaNombre(nombre){
    alert(nombre);
}

</script>
</html>
